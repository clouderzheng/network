NIO实例分析
NIO服务端序列

步骤一：打开ServerSocketChannel，用于监听客户端的连接
步骤二：绑定监听端口，设置连接为非阻塞模式
步骤三：创建Reactor线程，创建多路复用器并启动线程
步骤四：将ServerSocketChannel注册到Reactor线程的多路复用器Selector上，监听ACCEPT事件
步骤五：多路复用器在线程run方法的无限循环体内轮休准备就绪的Key
步骤六：多路复用器监听到有新的客户端接入，处理新的计入请求，完成TCP三次握手，建立物理链路
步骤七：设置客户端链路为非阻塞模式
步骤八：将新接入的客户端连接注册到Reactor线程的多路复用器上，监听读操作
步骤九：异步读取客户端请求消息到缓冲区
步骤十：对ByteBuffer进行编解码，如果有半包消息指针reset，继续读取后续的报文，将解码成功的消息封装成Task，投递到业务线程池中
步骤十一：将POJO对象encode成ByteBuffer，调用SocketChannel的异步write接口，将消息异步发送给客户端
NIO客户端序列

步骤一：打开SocketChannel，绑定客户端本机地址
步骤二：设置SocketChannel为非阻塞模式，设置客户端连接的TCP参数
步骤三：异步连接服务器
步骤四：判断是否连接成功，如果连接成功，则直接注册读状态位到多路复用器中，如果当前没有连接成功
步骤五：向Reactor线程的多路复用器注册OP_CONNECT状态位，监听服务端的TCP ACK应答
步骤六：创建Reactor线程，创建多路复用器并启动线程
步骤七：多路复用器在线程run方法的无限循环体内轮询准备就绪的Key
步骤八：接收connect事件进行处理
步骤九：判断连接结果，如果连接成功，注册读事件到多路复用器
步骤十：注册读事件到多路复用器
步骤十一：异步读客户端请求消息到缓冲区
步骤十二：对ByteBuffer进行编解码，如果有半包消息接收缓冲区Reset，继续读取后续的报文，将解码成功的消息封装成Task，投递到业务线程池中，进行业务逻辑编排。
步骤十三：将POJO对象encode成ByteBuffer，调用SocketChannel的异步write接口，将消息异步发送给客户端
